//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = require('./tracing_types');
//HELPER FUNCTIONS AND STRUCTURES


Calculator___can__finagle__trace__v3___args = function(args) {
};
Calculator___can__finagle__trace__v3___args.prototype = {};
Calculator___can__finagle__trace__v3___args.prototype.read = function(input) {
    input.readStructBegin();
    while (true)
    {
        var ret = input.readFieldBegin();
        var fname = ret.fname;
        var ftype = ret.ftype;
        var fid = ret.fid;
        if (ftype == Thrift.Type.STOP) {
            break;
        }
        input.skip(ftype);
        input.readFieldEnd();
    }
    input.readStructEnd();
    return;
};

Calculator___can__finagle__trace__v3___args.prototype.write = function(output) {
    output.writeStructBegin('Calculator___can__finagle__trace__v3___args');
    output.writeFieldStop();
    output.writeStructEnd();
    return;
};

Calculator___can__finagle__trace__v3___result = function(args) {
    this.success = null;
    if (args) {
        if (args.success !== undefined && args.success !== null) {
            this.success = new ttypes.UpgradeReply(args.success);
        }
    }
};
Calculator___can__finagle__trace__v3___result.prototype = {};
Calculator___can__finagle__trace__v3___result.prototype.read = function(input) {
    input.readStructBegin();
    while (true)
    {
        var ret = input.readFieldBegin();
        var fname = ret.fname;
        var ftype = ret.ftype;
        var fid = ret.fid;
        if (ftype == Thrift.Type.STOP) {
            break;
        }
        switch (fid)
        {
            case 0:
                if (ftype == Thrift.Type.STRUCT) {
                    this.success = new ttypes.UpgradeReply();
                    this.success.read(input);
                } else {
                    input.skip(ftype);
                }
                break;
            case 0:
                input.skip(ftype);
                break;
            default:
                input.skip(ftype);
        }
        input.readFieldEnd();
    }
    input.readStructEnd();
    return;
};

Calculator___can__finagle__trace__v3___result.prototype.write = function(output) {
    output.writeStructBegin('Calculator___can__finagle__trace__v3___result');
    if (this.success !== null && this.success !== undefined) {
        output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
        this.success.write(output);
        output.writeFieldEnd();
    }
    output.writeFieldStop();
    output.writeStructEnd();
    return;
};